{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech\\\\Desktop\\\\react-10am\\\\basic-app-0\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Header from './Header';\nimport Main from './Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nlet [products, setProducts] = useState([]);\nlet product = [];\nfunction search(e) {\n  let searchTerm = e.target.value.toLowerCase().trim();\n  const pattern = new RegExp(searchTerm);\n  let f = product.filter(singleProduct => pattern.test(singleProduct.name) || pattern.test(singleProduct.description));\n  setPr;\n}\nroot.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Header, {\n    fn: search\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Main, {\n    product: product\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this)]\n}, void 0, true));","map":{"version":3,"names":["React","useState","ReactDOM","Header","Main","jsxDEV","_jsxDEV","Fragment","_Fragment","root","createRoot","document","getElementById","products","setProducts","product","search","e","searchTerm","target","value","toLowerCase","trim","pattern","RegExp","f","filter","singleProduct","test","name","description","setPr","render","children","fn","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Tech/Desktop/react-10am/basic-app-0/src/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport Header from './Header'\r\nimport Main from './Main'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'))\r\n\r\nlet [products, setProducts] = useState([])\r\n\r\nlet product = [\r\n  \r\n];\r\n\r\nfunction search(e) {\r\n  let searchTerm = (e.target.value.toLowerCase()).trim()\r\n  const pattern = new RegExp(searchTerm);\r\n  let f = product.filter((singleProduct) => pattern.test(singleProduct.name) || pattern.test(singleProduct.description) )\r\n\r\n  setPr\r\n}\r\n\r\n\r\nroot.render(\r\n  <>\r\n  <Header fn={search} />\r\n  <Main product={product}/>\r\n  </>\r\n)"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;AAE1C,IAAIc,OAAO,GAAG,EAEb;AAED,SAASC,MAAMA,CAACC,CAAC,EAAE;EACjB,IAAIC,UAAU,GAAID,CAAC,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAAEC,IAAI,CAAC,CAAC;EACtD,MAAMC,OAAO,GAAG,IAAIC,MAAM,CAACN,UAAU,CAAC;EACtC,IAAIO,CAAC,GAAGV,OAAO,CAACW,MAAM,CAAEC,aAAa,IAAKJ,OAAO,CAACK,IAAI,CAACD,aAAa,CAACE,IAAI,CAAC,IAAIN,OAAO,CAACK,IAAI,CAACD,aAAa,CAACG,WAAW,CAAE,CAAC;EAEvHC,KAAK;AACP;AAGAtB,IAAI,CAACuB,MAAM,eACT1B,OAAA,CAAAE,SAAA;EAAAyB,QAAA,gBACA3B,OAAA,CAACH,MAAM;IAAC+B,EAAE,EAAElB;EAAO;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACtBhC,OAAA,CAACF,IAAI;IAACW,OAAO,EAAEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAAA,eACvB,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}